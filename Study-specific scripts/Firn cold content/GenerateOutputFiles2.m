%% ================== GenerateOutputFiles2 ===============================
% this script generates the outputfiles stored under:
%
% ***
% 
% and produced for the study:
%
% Vandecrux, B., Fausto, R., van As, D., Langen, P. L., Sampson, K., 
% Steffen, K., Box, J. E. (2018). Heat budget of the Greenland firn.
% Manuscr. Prep. 1–17
%
% Contact: b.vandecrux@gmail.com
% ======================================================================
%%
clear all
close all
set(0,'defaultfigurepaperunits','centimeters');
   set(0,'DefaultAxesFontSize',16)
   set(0,'defaultfigurecolor','w');
set(0,'defaultfigureinverthardcopy','off');
set(0,'defaultfigurepaperorientation','portrait');
set(0,'defaultfigurepapersize',[29.7 25]);
set(0,'defaultfigurepaperposition',[.25 .25 [29.7 25]-0.5]);
set(0,'DefaultTextInterpreter','none');
set(0, 'DefaultFigureUnits', 'centimeters');
set(0, 'DefaultFigurePosition', [.25 .25 [29.7 25]-0.5]);
addpath(genpath('..\matlab_functions'))
addpath(genpath('Input'),genpath('Output'))

WorkingFolder = './Output/THF study HD/Normal percol';
mkdir(sprintf('%s/Plots',WorkingFolder));
mkdir(sprintf('%s/distrib',WorkingFolder));
OutputFolder = sprintf('%s/Plots',WorkingFolder);
list = dir(WorkingFolder);
folder_list = {list.name};
folder_list = {folder_list{3:end}};
folder_list(find(strcmp(folder_list,'Plots')))= [];
folder_list(find(strcmp(folder_list,'distrib')))= [];
path_list={};
station={};
for i = 1:length(folder_list)
    path_list{i} = [WorkingFolder '/' folder_list{i}];
    temp = folder_list{i};
    ind =strfind(temp,'_z');
    station{i} = temp(1:ind-1);
end
  folderlist=path_list;
station2 = station;
for i =1:length(station)
    station2{i} = strrep(station{i},'-','');
    station2{i} = strrep(station2{i},' ','');
end
 
%% Weather data
% -           Date
% -          2m air temperature (recalculated using our own assumptions for roughness lengths and stability correction)
% -          2m relative humidity
% -          10m wind speed
% -          Precipitation rate
% -          SEB components (net shortwave radiation, downward longwave radiation from HIRHAM5, modelled upward longwave radiation, turbulent heat fluxes and subsurface heat flux)
% -          Modelled surface temperature
% -          Melt-water production

for i = 1:length(folderlist)
    disp(station{i})
    %% loadng surface data
        % extract run parameters
        load(strcat(folderlist{i},'/run_param.mat'))
        c.OutputFolder = folderlist{i};
        % extract surface variables
        namefile = sprintf('%s/surf-bin-%i.nc',folderlist{i},1);
        finfo = ncinfo(namefile);
        names={finfo.Variables.Name};
        for ii= 1:size(finfo.Variables,2)
            eval(sprintf('%s = ncread(''%s'',''%s'');', char(names{ii}), namefile,char(names{ii})));
        end
        time_mod = datenum(Year,1,Day,Hour,0,0);
        if ~isfield(c,'verbose')
            c.verbose = 1;
        end
        
        %% loading subsurface data
        % extracting observed
            namefile = sprintf('%s/subsurf-bin-%i.nc',folderlist{i},1);
    finfo = ncinfo(namefile);
    names={finfo.Variables.Name};
    for ii= 1:size(finfo.Variables,2)
        eval(sprintf('%s = ncread(''%s'',''%s'');', char(names{ii}), namefile,char(names{ii})));
    end
    pore_space = snowc .* c.rho_water.*( 1./rho - 1/c.rho_ice);
    excess_ice = max(0, snic * c.rho_water / c.rho_ice - pore_space);
    thickness_act = snowc.*(c.rho_water./rho) + excess_ice;
    
    depth_act=zeros(size(thickness_act));
    for j=1:length(thickness_act(1,:))
            depth_act(1:end,j)=cumsum(thickness_act(1:end,j));
    end
      k_eff = 0.021 + 2.5e-6*rho.^2 ;        
        GF_check =-(k_eff(1,:)) .* (T_ice(1,:)- T_ice(2,:)) ./ ( snic(1,:) + snowc(1,:));
        
%% loading station data
        
        [time_yr, year, day, hour, pres,...
    ~, T, ~, H_instr_temp, o_T1,o_T2, ...
    ~, RH, ~, H_instr_hum, o_RH1, o_RH2, ...
    ~, WS, ~, H_instr_wind, o_WS1, o_WS2,...
    SRin, SRout, LRin, LRout, T_ice_obs, ...
    depth_thermistor, Surface_Height, Tsurf_obs, data_AWS, c] = ...
    ExtractAWSData(c);

%% loading density tracking data
%             namefile = sprintf('%s/track_density.nc',folderlist{i});
%     finfo = ncinfo(namefile);
%     names={finfo.Variables.Name};
%     for ii= 1:size(finfo.Variables,2)
%         eval(sprintf('%s = ncread(''%s'',''%s'');', char(names{ii}), namefile,char(names{ii})));
%     end
%     
%     rho_avg = density_avg_20(6,:);
%     delta_rho_comp = 0*rho_avg;
%     delta_rho_comp(2:end) = max(0,density_avg_20(1,2:end) - rho_avg(1:end-1));
%     delta_rho_precip =  min(0,density_avg_20(2,:) -  density_avg_20(1,:));
%     delta_rho_subl =  max(0,density_avg_20(3,:) -  density_avg_20(2,:));
%     delta_rho_melt =  density_avg_20(4,:) -  density_avg_20(3,:);
%     delta_rho_runoff =  density_avg_20(5,:) -  density_avg_20(4,:);
%     delta_rho_rfrz =  density_avg_20(6,:) -  density_avg_20(5,:);
%     delta_rho_melt = max(0,delta_rho_melt + delta_rho_rfrz);

        %% Surface variable
        namefilesurf = ...
            sprintf('./Output/THF study HD/distrib/%s_surface.nc',station2{i});

        data = {data_AWS.time-datenum(1900,1,1,0,0,0), ...
            theta_2m, ...
            data_AWS.AirTemperature2C_Origin,...
            RH_2m_wrtw,...
            data_AWS.RelativeHumidity2_Origin,...
            ws_10m,...
            data_AWS.WindSpeed2ms_Origin,...
            data_AWS.Snowfallmweq*1000,...
            double(isnan(data_AWS.SurfaceHeightm)),...
            SRin,...
            data_AWS.ShortwaveRadiationDownWm2_Origin,...
            SRout,...
            data_AWS.ShortwaveRadiationUpWm2_Origin,...
            LRin,...
            LRout_mdl,...
            SHF,...
            LHF,...
            GF,...
            Tsurf + c.T_0,...
            meltflux*c.dt_obs/c.L_fus/c.rho_water*1000  };
        varname =  {'time', 'T_2m','T_2m_o', 'RH_2m', 'RH_2m_o', 'WS_10m', 'WS_10m_o',...
            'P','P_o', 'SRin', 'SRin_o', 'SRout', 'SRout_o', 'LRin', 'LRout', 'SHF', 'LHF', 'G' ...
            'Ts', 'melt'};
        unit =  {'days since 1900-1-1 0:0:0', 'K','','%','','m/s','', ...
            'mm/hr','', 'W/m2', '', 'W/m2', '', 'W/m2','W/m2','W/m2','W/m2','W/m2',...
            'K', 'mm/hr'};
        long_var_names = {'Time (UTC)', 'Air temperature at 2 m', 'Origin of air temperature data'...
            'Relative humidity at 2 m', 'Origin of relative humidity data',...
            'Wind speed at 10 m', 'Origin of wind speed data',...
            'Snowfall rate', 'Origin of snowfall rate', 'Downward shortwave radiation','Origin of downward shortwave radiation data',...
            'Upward shortwave radiation','Origin of the upward shortwave radiation data',...
            'Downward longwave radiation','Upward longwave radiation', ...
            'Sensible heat flux', 'Latent heat flux', 'Subsurface heat flux',...
            'Surface temperature', 'Melt rate'};
        text_origin = ['0 = from main station; 1 = adjusted from CP2; ' ...
            '2 = adjusted from Swiss Camp; 3 = adjusted from KAN_U;' ...
            '4 = adjusted from HIRHAM5; 5 = calculated using MODIS albedo'];
        comment = {'time stamp points at the beginning of each time interval',...
            'calculated by SEB model', text_origin, 'with regards to water, from SEB model', text_origin,...
            'calculated by SEB model', text_origin, 'from increments in surface height and snow density of 315 kg/m3',...
            '0 = from station; 1 = scaled from HIRHAM5','',text_origin,'',text_origin, 'adjusted from HIRHAM5', 'from SEB model', ...
            'from SEB model','from SEB model','from subsurface model', ...
            'from modelled LRout using emissivity of 0.98', ...
            'from SEB model'};
         for ii=1:length(data)
                 WriteNetCDF2(namefilesurf,data{ii},'VariableName', varname{ii},...
                     'DimensionNames',{'time'},...
                     'Unit', unit{ii},...
                     'LongVariableName',long_var_names{ii},...
                     'Comment', comment{ii});
         end
          clear data varname unit comment long_var_names
          
          %% Subsurface variable
%         namefilesurf = ...
%             sprintf('./Output/Standard runs/%s_subsurface.nc',station2{i});
%         data = {data_AWS.time-datenum(1900,1,1,0,0,0),...
%             depth_act, rho, rho_avg', delta_rho_comp', ...
%             delta_rho_precip',...
%             delta_rho_subl', delta_rho_melt'};
%                 
%         varname =  {'time', 'depth', 'rho', 'rho_avg_20', 'delta_rho_comp',...
%         'delta_rho_precip','delta_rho_subl','delta_rho_melt'};
%         
%         unit =  {'days since 1900-1-1 0:0:0','m', 'kg/m3','kg/m3','kg/m3',...
%         'kg/m3','kg/m3','kg/m3'};
%         
%         long_var_names = {'Time (UTC)', 'Depth', 'Firn density', ...
%         'Average density of the top 20 m of firn',...
%         'density change in the top 20m due to compaction',...
%         'density change in the top 20m due to snowfall',...
%         'density change in the top 20m due to sublimation',...
%         'density change in the top 20m due to melt and refreezing',...
%         };
%      WriteNetCDF2(namefilesurf,[1:201]','VariableName', 'layers',...
%              'DimensionNames',{'layers'},...
%              'Unit', '',...
%              'LongVariableName','model layers');
%          for ii=1:length(data)
% 
%              if ismember(ii, 2:3)
%                  WriteNetCDF2(namefilesurf,data{ii},'VariableName', varname{ii},...
%                      'DimensionNames',{'layers','time'},...
%                      'Unit', unit{ii},...
%                      'LongVariableName',long_var_names{ii});
%              else
%                  WriteNetCDF2(namefilesurf,data{ii},'VariableName', varname{ii},...
%                      'DimensionNames',{'time'},...
%                      'Unit', unit{ii},...
%                      'LongVariableName',long_var_names{ii});
%              end
%          end
%           clear data varname unit long_var_names
            


end
